}
my_matrix <- matrix(rnorm(5*5), 5, 5)
my_matrix
a <- makeCacheMatrix(my_matrix)
a$getInverse()
cacheSolve(a)
my_matrix <- matrix(1:4, 2, 2)
my_matrix
a <- makeCacheMatrix(my_matrix)
cacheSolve(a)
my_matrix <- matrix(1:9, 3, 3)
my_matrix
a <- makeCacheMatrix(my_matrix)
cacheSolve(a)
my_matrix <- matrix(1:16, 4, 4)
a <- makeCacheMatrix(my_matrix)
cacheSolve(a)
my_matrix <- matrix(c(1,23,34,32,454,23,343,23,23,234,23432,34,23,23,43,545), 4, 4)
a <- makeCacheMatrix(my_matrix)
cacheSolve(a)
library(datasets)
data(iris)
mean(iris$Species = "virginica", 1)
mean(iris[iris$Species = "virginica", 1])
mean(iris[iris$Species == "virginica", 1])
?iris
library(datasets)
data(mtcars)
?tapply
?mtcars
?with
?mtcars
mean(mtcars[mtcars$cyl == 4,4]) - mean(mtcars[mtcars$cyl == 8, 4])
debug(ls)
ls
?ls
debug(ls)
ls()
?gl
install.packages("ProjectTemplate")
install.packages("dplyr")
data <- read.table("./Data/household_power_consumption.txt", sep =';', header = T, stringsAsFactors = F, na.strings = "?") ## Reads the data
##SUBSETTING THE DATA AND CHANGING THE DATE AND TIME FORMATS
library(lubridate)
library(dplyr)
data <- tbl_df(data) ## converts the data frame into a more user fireidly data frame format suggested through dplyr
data <- mutate(data, Time = hms(Time), Date = dmy(Date)) ##This dplyr + lubridate command converts dates and times into their appropriate formats
start_date <- ymd("2007-02-01") ##Start and end dates for the data
end_date <- ymd("2007-02-02")
data1 <- filter(data, Date == start_date | Date == end_date) ## THe filter command from dplyr easily filters/subsets the rows of interest
pnorm(1800, mean= 1500, sd = 300)
pnorm(24, 21, sd = 5)
qnorm(10, 21, sd = 5)
qnorm(.1, 21, sd = 5)
qnorm(.2, 77, sd= 5)
?dbinom
dbinom(2, 10, .56)
dbinom(92, 100, .9)
xyplot(Ozone ~ Wind, data = airquality)
library(lattice); library(datasets)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind | Month, data = airquality)
nsform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wi
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
library(ggplot2)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = manufacturer)
qplot(displ, hwy, data = mpg, color = drv)
quartz()
quartz(qplot(displ, hwy, data = mpg, color = drv))
?geom
qplot(displ, hwy, data = mpg, color = drv, geom = c('point', 'smooth)'))
qplot(displ, hwy, data = mpg, color = drv, geom = c('point', 'smooth'))
qplot(displ, hwy, data = mpg, geom = c('point', 'smooth'))
qplot(hwy, data = mpg, color = drv) ##Makes a histogram (since only one var is mentioned)
?qplot
qplot(displ, hwy, data = mpg, facet =.~ drv)
qplot(displ, hwy, data = mpg, facets =.~ drv)
?quartz
qplot(hwy, data = mpg, facets =.~drv)
qplot(hwy, data = mpg, facets =drv~.)
qplot(hwy, data = mpg, facets =drv~2) ## The left side of ~ indicates the rows and the right side the no. of columns
qplot(hwy, data = mpg, facets =drv~1) ## The left side of ~ indicates the rows and the right side the no. of columns
qplot(hwy, data = mpg, facets =drv~drv) ## The left side of ~ indicates the rows and the right side the no. of columns
qplot(hwy, data = mpg, facets =drv~.) ## The left side of ~ indicates the rows and the right side the no. of columns
g <- ggplot(airquality, aes(Ozone, Wind))
str(g)
g + geom_point()
g + geom_smooth()
g + geom_smooth(method = 'lm') ## linear regression
g + geom_point() + geom_smooth(method = 'lm')
g + geom_point() + facet_grid(.~Month) + geom_smooth(method = 'lm')
g+ geom_point(color = 'steel blue', size = 4, alpha = .5)
g + geom_point(aes(color = Month) , size = 4, alpha = .5) ## color is controlled by month
g + geom_point(aes(color = Month) , size = 4, alpha = .5) + labs(title = "Wind Vs. Ozone")## with title
?theme_bw
?base_family
g + geom_point(aes(color = Month) , size = 4, alpha = .5) + labs(title = "Wind Vs. Ozone") + theme_light(base_size = 11, base_family = "Times")
g + geom_point(aes(color = Month) , size = 4, alpha = .5) + labs(title = "Wind Vs. Ozone") + theme_light(base_size = 11, base_family = "Avenir")
g + geom_point(aes(color = Month) , size = 4, alpha = .5) + labs(title = "Wind Vs. Ozone") + theme_light(base_size = 11.5, base_family = "Avenir")
library(nlme)
xyplot(weight ~ Time | Diet, Bodyweight)
xyplot(weight ~ Time | Diet, BodyWeight)
?splom
?trellis.parset
?trellis.par.set
?ppois
ppois(40, 45)
poisson.test(10, 60)
?pnorm
pnorm(3.2, 3, .246)
1 - pnorm(3.2, 3, .246)
1 - pnorm(32, 30.69, .718)
qnorm(.9, 30.69, .718)
library('manipulate')
k <- 1000
xvals <- seq(-5, 5, length = k)
myplot <- function(df){ d<- data.frame(y=c(dnorm(xvals), dt(xvals, df)), x = xvals, dist = factor(rep(c("Normal", "T"), c(k,k)))); g<-ggplot(d, aes(x = x, y = y)); g<- g + geom_line(size = 2, aes(colour = dist)); g}
library('ggplot2')
myplot <- function(df){ d<- data.frame(y=c(dnorm(xvals), dt(xvals, df)), x = xvals, dist = factor(rep(c("Normal", "T"), c(k,k)))); g<-ggplot(d, aes(x = x, y = y)); g<- g + geom_line(size = 2, aes(colour = dist)); g}
manipulate(myplot(mu), mu = slider(1, 20, step = 1))
pnorm(1.05, 1.2, 0.5)
1-pnorm(1.05, 1.2, 0.5)
1-pnorm(1.05, 1.2, 0.05)
pnorm(1.05, 1.2, 0.05)
pnorm(1.05, 1.2, 0.05)*2
library('swirl')
swirl()
main()
swirl()
?swirl
info()
nxt()
skip()
skip()
skip()
skip()
skip()
bye()
?pz
?pnorm
?pt
?pbinom
pbinom(6, size = 8, prob = 0.5, lower.tail = F)
pbinom(6, size = 8, prob = 0.5, lower.tail = T)
?t.test
?qt
qt(.95, 8)
qt(.95, 8)*10 +1100
qt(.975, 8)*10 +1100
1100 + qt(.975, 8)*10
1100 - qt(.975, 8)*10
2/qt(.975, 8)
6/qt(.975, 8)
qt(.975, 9)
((0.6^2 + 0.68^2)/2)^0.5
(((0.6^2 + 0.68^2)/2)^0.5)*((1/5)^.5)
qt(.975, 18)
qt(.975, 18) * 0.28677
sp <- sqrt((9*.6^2 + 9*.68^2)/18)
3-5 + c(-1, 1) * sp * (1/10 + 1/10) ^ .5
3-5 + c(-1, 1) * qt(.975, 18) * sp * (1/10 + 1/10) ^ .5
sp <- sqrt((9*(.6^2) + 9*(.68^2))/18)
3-5 + c(-1, 1) * qt(.975, 18) * sp * (1/10 + 1/10) ^ .5
sp <- sqrt((99*(.5^2) + 99*(5^2))/98)
3-5 + c(-1, 1) * qt(.975, 98) * sp * ((1/100 + 1/100) ^ .5)
6-4 + c(-1, 1) * qt(.975, 98) * sp * ((1/100 + 1/100) ^ .5)
sp <- sqrt((9*(1.5^2) + 9*(1.8^2))/18)
sp <- sqrt((9*(1.5^2) + 9*(1.8^2))/18)
sp <- sqrt((8*(1.5^2) + 8*(1.8^2))/16)
-3-1 + c(-1, 1) * qt(.95, 16) * sp * ((1/9 + 1/9) ^ .5)
read.table(ISO3166_1_Alpha_3    name
AFG	Afghanistan
DZA	Algeria
AGO	Angola
AZE	Azerbaijan
BHR	Bahrain
BOL	Bolivia
BWA	Botswana
BRA	Brazil
BFA	Burkina Faso
KHM	Cambodia
CMR	Cameroon
CAF	Central African Republic
TCD	Chad
CHL	Chile
CHN	China
COL	Colombia
COG	Congo
COD	The Democratic Republic of the Congo)
read.table(header = T, stringAsFactors = F, "ISO3166_1_Alpha_3    name
AFG	Afghanistan
DZA	Algeria
AGO	Angola
AZE	Azerbaijan
BHR	Bahrain
BOL	Bolivia
BWA	Botswana
BRA	Brazil
BFA	Burkina Faso
KHM	Cambodia
CMR	Cameroon
CAF	Central African Republic
TCD	Chad
CHL	Chile
CHN	China
COL	Colombia
COG	Congo
COD	The Democratic Republic of the Congo")
table1 <- read.table(header = T, stringAsFactors = F, "ISO3166_1_Alpha_3    name
AFG	Afghanistan
DZA	Algeria
AGO	Angola
AZE	Azerbaijan
BHR	Bahrain
BOL	Bolivia
BWA	Botswana
BRA	Brazil
BFA	Burkina Faso
KHM	Cambodia
CMR	Cameroon
CAF	Central African Republic
TCD	Chad
CHL	Chile
CHN	China
COL	Colombia
COG	Congo
COD	The Democratic Republic of the Congo")
table1 <- read.table(header = T, stringsAsFactors = F, "ISO3166_1_Alpha_3    name
AFG	Afghanistan
DZA	Algeria
AGO	Angola
AZE	Azerbaijan
BHR	Bahrain
BOL	Bolivia
BWA	Botswana
BRA	Brazil
BFA	Burkina Faso
KHM	Cambodia
CMR	Cameroon
CAF	Central African Republic
TCD	Chad
CHL	Chile
CHN	China
COL	Colombia
COG	Congo
COD	The Democratic Republic of the Congo")
table1 <- read.table(header = T, stringsAsFactors = F, text = "ISO3166_1_Alpha_3    name
AFG	Afghanistan
DZA	Algeria
AGO	Angola
AZE	Azerbaijan
BHR	Bahrain
BOL	Bolivia
BWA	Botswana
BRA	Brazil
BFA	Burkina Faso
KHM	Cambodia
CMR	Cameroon
CAF	Central African Republic
TCD	Chad
CHL	Chile
CHN	China
COL	Colombia
COG	Congo
COD	The Democratic Republic of the Congo")
char1 <- c("A", "B")
tot_files <- 100
char2 <- NULL
for (i in 1:100){
char2[i] <- (i-4)+3
}
char2
char2 <- 0
char2
char2 <- 0
for (i in 2:100){
char2[i] <- char2[i-1] + 3
}
char2
char3 <- "X"
char4<- c(1,2,3,4)
fileNames <- paste(c(char1, char2, char3, char4), sep = "-")
fileNames
paste(char1, char2, char3)
fileNames <- paste(char1, char2, char3, char4, sep = "-")
fileNames
fileNames <- paste(char1, char2, char3, char4,".csv", sep = "-")
fileNames
fileNames <- paste(fileNames, ".csv", sep="")
fileNames
fileNames <- paste(char1, char2, char3, char4, sep = "-")
fileNames <- paste(fileNames, ".csv", sep="")
fileNames
fileNames
data <- read.csv("http://www.resourcegovernance.org/sites/default/files/rgi_2013-compscores.csv")
View(data)
newNames <- tolower(names(data))
newNames<- gsub("\\.", "", newNames)
colnames(data) <- newNames
View(data)
names(data)
library(ggplot2)
plot <- ggplot(data, aes(institutionalandlegalsetting, enablingenvironment))
plot <- plot + geom_smooth(method = 'lm') + geom_point()
plot
cor(x = data[,"institutionalandlegalsetting"], y= data[, "enablingenvironment"], use = "complete.obs")
library(datasets)
ls
?datasets
library(hel - 'datasets')
library(help = 'datasets')
women
airquality
?data.frame
data <- data.frame(Ozone = airquality$Ozone, Wind = airquality$Wind)
data
library(ggplot2)
plot <- ggplot(data, aes(x = Wind, y = Ozone))
plot + geom_point()
plot <- ggplot(data, aes(x = Wind, y = Ozone))
plot + geom_point() + geom_smooth(method = 'lm')
kMeansObj <- kmeans(data, centers = 4)
?kmeans
kMeansObj <- kmeans(data, centers = 3, na.rm = T)
kMeansObj <- kmeans(data, centers = 3)
women
kmeanstest <- kmeans(women, centers = 3)
kmeanstest
plot <- gpglot(women, aes(height, weight), group = kmeanstest$cluster)
plot + geom_point()
plot <- gglot(women, aes(height, weight), group = kmeanstest$cluster)
plot + geom_point()
plot <- ggplot(women, aes(height, weight), group = kmeanstest$cluster)
plot + geom_point()
plot + geom_point(aes(colour = kmeanstest$cluster))
install.packages("colorRamps")
install.packages("colorRampPalette")
5	135	130')
5	135	130")
data <- read.table(header = T, stringsAsFactors = F, text =
data <- read.table(header = T, stringsAsFactors = F, text =
"Subject        Baseline	Week
1	140	132
2	138	135
3	150	151
4	148	146
5       135	130")
View(data)
library(dplyr)
data<- mutate(data, meanDiff = Baseline - Week)
View(data)
?t.test
t.test(data$Baseline, data$Week, lower.tail = F)
t.test(data$Baseline, data$Week, lower.tail = F, paired = T)
?pnorm
?t.test
ppois
?ppois
pnorm(1.94*.004, .01, .004, lower.tail =F)
pnorm(1.94*.004, .01, .004, lower.tail =T)
pnorm(1.67*.004, .01, .004, lower.tail =T)
pnorm(1.645*.004, .01, .004, lower.tail =T)
power.t.test(power = .9, delta = 0.01, sd = 0.04, type = "one.sample", alt = "one.sided")$n
?pnorm
install.packages("UsingR")
library(UsingR); data(galton)
library(ggplot2)
library(ggplot2); library(dplyr)
galton
data <- dbl_df(galton)
?tbl_df
data <- tbl_df(galton)
data
plot <- ggplot(data, aes(child, parent))
plot + geom_hist()
plot + geom_histogram(aes(child))
plot + geom_histogram()
plot <- ggplot(data, aes(child, parent))
plot + geom_histogram()
plot <- ggplot(data, aes(child))
plot + geom_histogram()
library(UsingR)
data(diamond)
library('swirl')
swirl()
install_from_swirl("Regression_Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col = 'red')
summary(regrline)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
?lm
fit <- lm(y~x)
fit
summary(lm)
library(swirl)
swirl()
fit <- lm(child ~ parent)
fit <- lm(galton$child ~ galton$parent)
summary(fit)
rm(list = ls())
library(swirl)
swirl()
quit()
library(swirl)
swirl()
library(swirl)
swirl(0)
fit <- lm(child ~ parent)
fit <- lm(galton$child ~ galton$parent)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
library(swirl)
swirl()
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs, rhs)
var(galton$child)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, sum(varRes, varEst))
all.equal(varChild, varRes + varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, efit$mag)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit <- lm(galton$child ~ galton$parent)
fit <- lm(child ~ parent, galton)
(sum(fit$residuals ^ 2)) ^ 0.5
(sum(fit$residuals ^ 2))/n-2 ^ 0.5
((sum(fit$residuals ^ 2))/n-2) ^ 0.5
(sum((fit$residuals ^ 2)/n-2)) ^ 0.5
(sum((fit$residuals ^ 2)/(n-2))) ^ 0.5
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- galton$child - mu
sTot <- sum((galton$child - mu) ^ 2)
sRes <- deviance(galton$child, est(olsslope, ols.ic))
sRes <- deviance(galton$child, fit)
sRes <- deviance(child, fit)
sRes <- deviance(galton$child, fit)
skip()
skip()
skip()
cor(galton$child, galton$parent) ^ 2
install.packages('Shiny')
install.packages('shiny')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
shiny::runApp('Documents/Coursera Courses/Shiny/App-1')
install.packages("rgeos")
devtools::install_github("rstudio/leaflet")
install_github("rstudio/leaflet")
install.packages("leafletR")
install.packages("maptools")
install.packages("ggmap")
setwd("~/Documents/Price Project/Code/Web App Code/maps/Nigeria GADM Shapefiles")
readShapeSpatial("NGA_adm1.shp")
library('maptools')
readShapeSpatial("NGA_adm1.shp")
nigeria1 <- readShapeSpatial("NGA_adm1.shp")
str(nigeria1)
plot(nigeria1)
library('maptools'); library(ggplot2)
nigeria1 <- fortify(nigeria1, region = "NAME_1")
install.packages("rgeos")
install.packages("rgdal")
install.packages("gpclib")
library('maptools'); library(ggplot2)
nigeria1 <- readShapeSpatial("NGA_adm1.shp")
nigeria1 <- fortify(nigeria1, region = "NAME_1")
